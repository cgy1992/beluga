./d-tree-npce-13.c:5:16: warning - expression result not used
  int i1 = 0 && (1, 2);                                /* okay */
                 ^
./d-tree-npce-13.c:6:25: warning - expression result not used
  int *i2 = (int *)(1 || (i1, i2));                    /* okay */
                          ^
./d-tree-npce-13.c:6:12: warning - conversion between pointer and integer is not portable
  int *i2 = (int *)(1 || (i1, i2));                    /* okay */
             ^
./d-tree-npce-13.c:7:28: warning - expression result not used
  int *i3 = (int *)(0 && (&i1+(int)(3.14+3), &i1));    /* okay */
                             ^
./d-tree-npce-13.c:7:12: warning - conversion between pointer and integer is not portable
  int *i3 = (int *)(0 && (&i1+(int)(3.14+3), &i1));    /* okay */
             ^
./d-tree-npce-13.c:9:21: warning - missing prototype
  int i4 = 0 && ((int (*)())0)();
                      ^
./d-tree-npce-13.c:9:12: warning - non-portable constant expression for initializer
  int i4 = 0 && ((int (*)())0)();
             ^
./d-tree-npce-13.c:10:12: warning - non-portable constant expression for initializer
  int i5 = 0 && f();
             ^
./d-tree-npce-13.c:11:12: warning - non-portable constant expression for initializer
  int i6 = 1 || ++*((int *)0);
             ^
./d-tree-npce-13.c:12:12: warning - non-portable constant expression for initializer
  int i7 = 1 || i6++;
             ^
./d-tree-npce-13.c:13:13: warning - non-portable constant expression for initializer
  int i8 = (1)? 0: (*((int *)0) = 0);
              ^
./d-tree-npce-13.c:14:13: warning - non-portable constant expression for initializer
  int i9 = (1)? 0: (i6 = 0);
              ^
./d-tree-npce-13.c:15:13: warning - non-portable constant expression for initializer
  int i10 = 0 && (*((int *)0) += 0);
              ^
./d-tree-npce-13.c:16:13: warning - non-portable constant expression for initializer
  int i11 = 0 && (i6 += 0);
              ^
./d-tree-npce-13.c:17:31: warning - missing prototype
  int *i12 = (int *)(0 && ((int (*)())0)());        /* okay */
                                ^
./d-tree-npce-13.c:17:13: warning - conversion between pointer and integer is not portable
  int *i12 = (int *)(0 && ((int (*)())0)());        /* okay */
              ^
./d-tree-npce-13.c:18:13: warning - conversion between pointer and integer is not portable
  int *i13 = (int *)(1 || ++*((int *)0));           /* okay */
              ^
./d-tree-npce-13.c:19:13: warning - conversion between pointer and integer is not portable
  int *i14 = (int *)((1)? 0: (*((int *)0) = 0));    /* okay */
              ^
./d-tree-npce-13.c:20:13: warning - conversion between pointer and integer is not portable
  int *i15 = (int *)(0 && (*((int *)0) += 0));      /* okay */
              ^
./d-tree-npce-13.c:21:29: warning - missing prototype
  int i16 = sizeof(0 && ((int (*)())0)());          /* okay */
                              ^
./d-tree-npce-13.c:26:17: warning - address of `i1' always results in true
  int i20 = 1 || &i1 == 0;
                  ^
./d-tree-npce-13.c:26:13: warning - non-portable constant expression for initializer
  int i20 = 1 || &i1 == 0;
              ^
./d-tree-npce-13.c:27:18: warning - expression result not used
  int i21 = 1 || ((void *)0, 1);
                   ^
./d-tree-npce-13.c:27:13: warning - non-portable constant expression for initializer
  int i21 = 1 || ((void *)0, 1);
              ^
./d-tree-npce-13.c:28:18: warning - conversion between pointer and integer is not portable
  int i22 = 0 && ((int)(void *)0 + 3.14);
                   ^
./d-tree-npce-13.c:28:13: warning - non-portable constant expression for initializer
  int i22 = 0 && ((int)(void *)0 + 3.14);
              ^
./d-tree-npce-13.c:30:12: warning - expression result not used
  int i23 = (1, 2) || 0;
             ^
./d-tree-npce-13.c:30:18: warning - non-portable constant expression for initializer
  int i23 = (1, 2) || 0;
                   ^
./d-tree-npce-13.c:31:21: warning - expression result not used
  int *i24 = (int *)((i1, i2) || 1);
                      ^
./d-tree-npce-13.c:31:13: warning - conversion between pointer and integer is not portable
  int *i24 = (int *)((i1, i2) || 1);
              ^
./d-tree-npce-13.c:31:13: ERROR - initializer must be constant
  int *i24 = (int *)((i1, i2) || 1);
              ^
./d-tree-npce-13.c:32:22: warning - address of `i1' always results in true
  int *i25 = (int *)((&i1+(int)(3.14+3)) && 0);
                       ^
./d-tree-npce-13.c:32:13: warning - conversion between pointer and integer is not portable
  int *i25 = (int *)((&i1+(int)(3.14+3)) && 0);
              ^
./d-tree-npce-13.c:32:13: warning - non-portable constant expression for initializer
  int *i25 = (int *)((&i1+(int)(3.14+3)) && 0);
              ^
./d-tree-npce-13.c:33:17: warning - missing prototype
  int i26 = ((int (*)())0)() && 0;
                  ^
./d-tree-npce-13.c:33:28: ERROR - initializer must be constant
  int i26 = ((int (*)())0)() && 0;
                             ^
./d-tree-npce-13.c:34:25: ERROR - initializer must be constant
  int i27 = ++*((int *)0) && 0;
                          ^
./d-tree-npce-13.c:35:29: ERROR - initializer must be constant
  int i28 = (*((int *)0) = 0) || 1;
                              ^
./d-tree-npce-13.c:36:30: ERROR - initializer must be constant
  int i29 = (*((int *)0) += 0) || 1;
                               ^
./d-tree-npce-13.c:38:20: warning - address of `i1' always results in true
  int *i30 = &i1 + (&i1 == 0);
                     ^
./d-tree-npce-13.c:38:16: warning - non-portable constant expression for initializer
  int *i30 = &i1 + (&i1 == 0);
                 ^
./d-tree-npce-13.c:39:24: warning - address of `i1' always results in true
  int i31 = 3.14 * 2 + (&i1 != 0);
                         ^
./d-tree-npce-13.c:39:20: warning - non-portable constant expression for initializer
  int i31 = 3.14 * 2 + (&i1 != 0);
                     ^
